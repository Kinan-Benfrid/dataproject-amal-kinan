[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[info] Updated file C:\Users\BENFRID Kinân\dataproject-amal-kinan\project\build.properties: set sbt.version to 1.6.2
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.2 (Oracle Corporation Java 1.8.0_261)
[debug]       Load.loadUnit: plugins took 244.4013ms
[debug]       Load.loadUnit: defsScala took 0.4839ms
[debug] [Loading] Scanning directory C:\Users\BENFRID Kinân\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\BENFRID Kinân\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 30.8981 ms
[debug]           Load.resolveProject(global-plugins) took 88.0665ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\BENFRID Kinân\.sbt\1.0\plugins, plugins: List(<none>))) took 162.9068ms
[debug] [Loading] Done in C:\Users\BENFRID Kinân\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 204.1232ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.4202ms
[debug]     Load.loadUnit(file:/C:/Users/BENFRID%20Kinân/.sbt/1.0/plugins/, ...) took 464.8338ms
[debug]   Load.apply: load took 851.6677ms
[debug]   Load.apply: resolveProjects took 15.2075ms
[debug]   Load.apply: finalTransforms took 214.7377ms
[debug]   Load.apply: config.delegates took 37.2864ms
[debug]   Load.apply: Def.make(settings)... took 988.5494ms
[debug]   Load.apply: structureIndex took 185.5342ms
[debug]   Load.apply: mkStreams took 3.6924ms
[info] loading global plugins from C:\Users\BENFRID Kinân\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 6920.2606ms
[debug]           Load.loadUnit: plugins took 60.0757ms
[debug]           Load.loadUnit: defsScala took 0.0072ms
[debug] [Loading] Scanning directory C:\Users\BENFRID Kinân\dataproject-amal-kinan\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\BENFRID Kinân\dataproject-amal-kinan\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 4.3082 ms
[debug]               Load.resolveProject(dataproject-amal-kinan-build) took 2.8689ms
[debug]             Load.loadTransitive: finalizeProject(Project(id dataproject-amal-kinan-build, base: C:\Users\BENFRID Kinân\dataproject-amal-kinan\project, plugins: List(<none>))) took 8.3793ms
[debug] [Loading] Done in C:\Users\BENFRID Kinân\dataproject-amal-kinan\project, returning: (dataproject-amal-kinan-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 12.0011ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.0213ms
[debug]         Load.loadUnit(file:/C:/Users/BENFRID%20Kinân/dataproject-amal-kinan/project/, ...) took 74.2659ms
[debug]       Load.apply: load took 77.2684ms
[debug]       Load.apply: resolveProjects took 0.2331ms
[debug]       Load.apply: finalTransforms took 19.677ms
[debug]       Load.apply: config.delegates took 0.6406ms
[debug]       Load.apply: Def.make(settings)... took 174.5263ms
[debug]       Load.apply: structureIndex took 56.3183ms
[debug]       Load.apply: mkStreams took 0.004ms
[info] loading project definition from C:\Users\BENFRID Kinân\dataproject-amal-kinan\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 6081.1109ms
[debug]     Load.loadUnit: defsScala took 0.0043ms
[debug] [Loading] Scanning directory C:\Users\BENFRID Kinân\dataproject-amal-kinan
[debug]       Load.loadUnit: mkEval took 12.1057ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.4567 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 7.825ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\BENFRID Kinân\dataproject-amal-kinan, plugins: List(<none>))) took 12.6634ms
[debug] [Loading] Done in C:\Users\BENFRID Kinân\dataproject-amal-kinan, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 7309.8281ms
[debug]     Load.loadUnit: cleanEvalClasses took 25.4271ms
[debug]   Load.loadUnit(file:/C:/Users/BENFRID%20Kinân/dataproject-amal-kinan/, ...) took 13417.402ms
[debug] Load.apply: load took 13420.6752ms
[debug] Load.apply: resolveProjects took 0.2467ms
[debug] Load.apply: finalTransforms took 17.5597ms
[debug] Load.apply: config.delegates took 0.771ms
[debug] Load.apply: Def.make(settings)... took 151.5096ms
[debug] Load.apply: structureIndex took 39.2295ms
[debug] Load.apply: mkStreams took 0.01ms
[info] set current project to learnSparkScala (in build file:/C:/Users/BENFRID%20Kinân/dataproject-amal-kinan/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:sbt-server-903a7fd6eb4feab02ea7
[debug] Writing bsp connection file
[info] started sbt server
